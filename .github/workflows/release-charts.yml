name: Release Helm Charts

on:
  push:
    branches:
      - main
    paths:
      - 'wordpress/**'
      - 'mariadb/**'
      - 'memcached/**'
      - 'artifacthub-repo.yml'
      - '.github/workflows/release-charts.yml'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Update chart dependencies
        run: |
          set -euo pipefail
          charts=(mariadb memcached wordpress)
          for chart in "${charts[@]}"; do
            if [ -f "${chart}/Chart.yaml" ]; then
              helm dependency build "${chart}"
            fi
          done

      - name: Lint Helm charts
        run: |
          set -euo pipefail
          for chart in mariadb memcached wordpress; do
            helm lint "$chart"
          done

      - name: Package Helm charts
        run: |
          set -euo pipefail
          mkdir -p .cr-release-packages
          for chart in mariadb memcached wordpress; do
            helm package "$chart" --destination .cr-release-packages
          done

      - name: Push charts to OCI registry
        run: |
          set -euo pipefail
          for package in .cr-release-packages/*.tgz; do
            if [ -f "$package" ]; then
              echo "Pushing $package to OCI registry..."
              helm push "$package" oci://ghcr.io/${{ github.repository_owner }}/charts
            fi
          done

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: .
          skip_existing: true
          skip_packaging: true
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-dir

      - name: Copy artifacthub-repo.yml to gh-pages
        run: |
          if [ -f "artifacthub-repo.yml" ]; then
            cp artifacthub-repo.yml gh-pages-dir/
            cd gh-pages-dir
            git config user.name "${GITHUB_ACTOR}"
            git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
            git add artifacthub-repo.yml
            git diff --staged --quiet || git commit -m "Update artifacthub-repo.yml"
            git push
          fi
