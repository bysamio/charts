{{- $svcPortName := "http" -}}
{{- if .Values.ingress.enabled }}
{{- $fullName := include "wordpress.fullname" . -}}
{{- $ingressApiVersion := default "networking.k8s.io/v1" .Values.ingress.apiVersion -}}
apiVersion: {{ $ingressApiVersion }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "wordpress.labels" . | nindent 4 }}
  {{- if or .Values.ingress.annotations .Values.commonAnnotations }}
  annotations:
    {{- if .Values.ingress.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.ingress.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  {{- if .Values.ingress.ingressClassName }}
  ingressClassName: {{ .Values.ingress.ingressClassName | quote }}
  {{- end }}
  rules:
    {{- if .Values.ingress.hostname }}
    - host: {{ tpl .Values.ingress.hostname $ | quote }}
      http:
        paths:
          {{- if .Values.ingress.extraPaths }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.ingress.extraPaths "context" $ ) | nindent 10 }}
          {{- end }}
          - path: {{ .Values.ingress.path | default "/" }}
            pathType: {{ .Values.ingress.pathType | default "ImplementationSpecific" }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  name: {{ $svcPortName }}
    {{- end }}
    {{- range .Values.ingress.extraHosts }}
    - host: {{ tpl .name $ | quote }}
      http:
        paths:
          - path: {{ default "/" .path }}
            pathType: {{ default "ImplementationSpecific" .pathType }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  name: {{ $svcPortName }}
    {{- end }}
    {{- if .Values.ingress.extraRules }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.ingress.extraRules "context" $ ) | nindent 4 }}
    {{- end }}
  {{- $hasDefaultTls := and .Values.ingress.tls .Values.ingress.hostname }}
  {{- $hasExtraTls := gt (len .Values.ingress.extraTls) 0 }}
  {{- if or $hasDefaultTls $hasExtraTls }}
  tls:
    {{- if $hasDefaultTls }}
    - hosts:
        {{- $host := tpl .Values.ingress.hostname $ -}}
        - {{ $host | quote }}
        {{- if and .Values.ingress.tlsWwwPrefix (not (hasPrefix "www." $host)) }}
        - {{ printf "www.%s" $host | quote }}
        {{- end }}
      secretName: {{ printf "%s-tls" $host | quote }}
    {{- end }}
    {{- if $hasExtraTls }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.ingress.extraTls "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
{{- end }}

{{- if and .Values.ingress.enabled .Values.ingress.secrets }}
{{- range .Values.ingress.secrets }}
{{- if and .name .certificate .key }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ tpl .name $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    {{- include "wordpress.labels" $ | nindent 4 }}
  {{- if $.Values.commonAnnotations }}
  annotations:
    {{- include "common.tplvalues.render" ( dict "value" $.Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .certificate | b64enc }}
  tls.key: {{ .key | b64enc }}
{{- end }}
{{- end }}
{{- end }}

{{- if .Values.secondaryIngress.enabled }}
{{- $secondaryName := printf "%s-secondary" (include "wordpress.fullname" .) -}}
{{- $secondaryApiVersion := default "networking.k8s.io/v1" .Values.secondaryIngress.apiVersion -}}
---
apiVersion: {{ $secondaryApiVersion }}
kind: Ingress
metadata:
  name: {{ $secondaryName }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "wordpress.labels" . | nindent 4 }}
  {{- if or .Values.secondaryIngress.annotations .Values.commonAnnotations }}
  annotations:
    {{- if .Values.secondaryIngress.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.secondaryIngress.annotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  {{- if .Values.secondaryIngress.ingressClassName }}
  ingressClassName: {{ .Values.secondaryIngress.ingressClassName | quote }}
  {{- end }}
  rules:
    {{- if .Values.secondaryIngress.hostname }}
    - host: {{ tpl .Values.secondaryIngress.hostname $ | quote }}
      http:
        paths:
          {{- if .Values.secondaryIngress.extraPaths }}
          {{- include "common.tplvalues.render" ( dict "value" .Values.secondaryIngress.extraPaths "context" $ ) | nindent 10 }}
          {{- end }}
          - path: {{ .Values.secondaryIngress.path | default "/" }}
            pathType: {{ .Values.secondaryIngress.pathType | default "ImplementationSpecific" }}
            backend:
              service:
                name: {{ include "wordpress.fullname" . }}
                port:
                  name: {{ $svcPortName }}
    {{- end }}
    {{- range .Values.secondaryIngress.extraHosts }}
    - host: {{ tpl .name $ | quote }}
      http:
        paths:
          - path: {{ default "/" .path }}
            pathType: {{ default "ImplementationSpecific" .pathType }}
            backend:
              service:
                name: {{ include "wordpress.fullname" $ }}
                port:
                  name: {{ $svcPortName }}
    {{- end }}
    {{- if .Values.secondaryIngress.extraRules }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.secondaryIngress.extraRules "context" $ ) | nindent 4 }}
    {{- end }}
  {{- $secHasDefaultTls := and .Values.secondaryIngress.tls .Values.secondaryIngress.hostname }}
  {{- $secHasExtraTls := gt (len .Values.secondaryIngress.extraTls) 0 }}
  {{- if or $secHasDefaultTls $secHasExtraTls }}
  tls:
    {{- if $secHasDefaultTls }}
    - hosts:
        {{- $secHost := tpl .Values.secondaryIngress.hostname $ -}}
        - {{ $secHost | quote }}
        {{- if and .Values.secondaryIngress.tlsWwwPrefix (not (hasPrefix "www." $secHost)) }}
        - {{ printf "www.%s" $secHost | quote }}
        {{- end }}
      secretName: {{ printf "%s-tls" $secHost | quote }}
    {{- end }}
    {{- if $secHasExtraTls }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.secondaryIngress.extraTls "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
{{- end }}

{{- if and .Values.secondaryIngress.enabled .Values.secondaryIngress.secrets }}
{{- range .Values.secondaryIngress.secrets }}
{{- if and .name .certificate .key }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ tpl .name $ | quote }}
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    {{- include "wordpress.labels" $ | nindent 4 }}
  {{- if $.Values.commonAnnotations }}
  annotations:
    {{- include "common.tplvalues.render" ( dict "value" $.Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .certificate | b64enc }}
  tls.key: {{ .key | b64enc }}
{{- end }}
{{- end }}
{{- end }}